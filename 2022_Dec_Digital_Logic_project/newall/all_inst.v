// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 64-Bit Version 13.1 (Build Build 162 10/23/2013)
// Created on Mon Mar 13 19:21:51 2023

all all_inst
(
	.in7(in7_sig) ,	// input  in7_sig
	.in6(in6_sig) ,	// input  in6_sig
	.in5(in5_sig) ,	// input  in5_sig
	.in4(in4_sig) ,	// input  in4_sig
	.in0(in0_sig) ,	// input  in0_sig
	.in2(in2_sig) ,	// input  in2_sig
	.in1(in1_sig) ,	// input  in1_sig
	.in3(in3_sig) ,	// input  in3_sig
	.oneg(oneg_sig) ,	// output  oneg_sig
	.one6(one6_sig) ,	// output  one6_sig
	.one5(one5_sig) ,	// output  one5_sig
	.one4(one4_sig) ,	// output  one4_sig
	.one3(one3_sig) ,	// output  one3_sig
	.one2(one2_sig) ,	// output  one2_sig
	.one1(one1_sig) ,	// output  one1_sig
	.hun7(hun7_sig) ,	// output  hun7_sig
	.hun6(hun6_sig) ,	// output  hun6_sig
	.hun5(hun5_sig) ,	// output  hun5_sig
	.hun4(hun4_sig) ,	// output  hun4_sig
	.hun3(hun3_sig) ,	// output  hun3_sig
	.hun2(hun2_sig) ,	// output  hun2_sig
	.hun1(hun1_sig) ,	// output  hun1_sig
	.ten7(ten7_sig) ,	// output  ten7_sig
	.ten6(ten6_sig) ,	// output  ten6_sig
	.ten5(ten5_sig) ,	// output  ten5_sig
	.ten4(ten4_sig) ,	// output  ten4_sig
	.ten3(ten3_sig) ,	// output  ten3_sig
	.ten2(ten2_sig) ,	// output  ten2_sig
	.ten1(ten1_sig) 	// output  ten1_sig
);

