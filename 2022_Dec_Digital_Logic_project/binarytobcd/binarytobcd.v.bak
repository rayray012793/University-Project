module binarytobcd{
input clk;
input [7:0] binary_value;
output reg [3:0] one = 0,
output reg [3:0] ten = 0,
output reg [3:0] hundred = 0
};

reg [3:0] i=0;
reg [19:0] shift = 0;
reg [3:0] temp_one =0;
reg [3:0] temp_ten =0;
reg [3:0] temp_hundred =0;
reg [7:0] old_binary_value = 0;

always@(posedge clk) 
begin
   if (i==0 & old_binary_value != binary_value)
	   begin
		shift = 20'd0;
		temp_hundred = shift[19:16];
		temp_ten = shift[15:12];
		temp_one = shift[11:8];
		i = i + 1;
		end
	if(i < 9 & i > 0)
      begin
	   	if(temp_hundred >= 5)
			temp_hundred = temp_hundred + 3;
			if(temp_ten >= 5)
			temp_ten = temp_ten + 3;
			if(temp_one >= 5)
			temp_one = temp_one + 3;
			shift [19:8] = {temp_hundred , temp_ten , temp_one};
			shift = shift << 1;
	      temp_hundred = shift[19:16];
		   temp_ten = shift[15:12];
		   temp_one = shift[11:8];
		   i = i + 1;
			end
	 if(i == 9)
	    begin
		 i = 0;
		 hundred = temp_hundred;
		 ten = temp_ten;
		 one = temp_one;
		 end
	end	 
endmodule