/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("B7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Y9")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y8")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("input")
{
	MEMBERS = "B7", "B6", "B5", "B4", "B3", "B2", "B1", "B0";
}

GROUP("output")
{
	MEMBERS = "Y9", "Y8", "Y7", "Y6", "Y5", "Y4", "Y3", "Y2", "Y1", "Y0";
}

TRANSITION_LIST("B7")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("B6")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 360.0;
		}
	}
}

TRANSITION_LIST("B5")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("B4")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("B3")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("B2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("B1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("B0")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("Y9")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.192;
			LEVEL 0 FOR 992.808;
		}
	}
}

TRANSITION_LIST("Y8")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.537;
			LEVEL 0 FOR 800.341;
			LEVEL 1 FOR 3.116;
			LEVEL 0 FOR 189.006;
		}
	}
}

TRANSITION_LIST("Y7")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.48;
			LEVEL 0 FOR 803.574;
			LEVEL 1 FOR 188.946;
		}
	}
}

TRANSITION_LIST("Y6")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.406;
			LEVEL 0 FOR 400.439;
			LEVEL 1 FOR 399.307;
			LEVEL 0 FOR 190.848;
		}
	}
}

TRANSITION_LIST("Y5")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.193;
			LEVEL 0 FOR 197.713;
			LEVEL 1 FOR 202.734;
			LEVEL 0 FOR 197.266;
			LEVEL 1 FOR 198.847;
			LEVEL 0 FOR 192.247;
		}
	}
}

TRANSITION_LIST("Y4")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.817;
			LEVEL 0 FOR 97.752;
			LEVEL 1 FOR 60.403;
			LEVEL 0 FOR 2.631;
			LEVEL 1 FOR 37.087;
			LEVEL 0 FOR 99.879;
			LEVEL 1 FOR 102.463;
			LEVEL 0 FOR 97.537;
			LEVEL 1 FOR 100.121;
			LEVEL 0 FOR 99.879;
			LEVEL 1 FOR 101.82;
			LEVEL 0 FOR 98.18;
			LEVEL 1 FOR 92.431;
		}
	}
}

TRANSITION_LIST("Y3")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 11.669;
			LEVEL 0 FOR 80.217;
			LEVEL 1 FOR 17.46;
			LEVEL 0 FOR 80.085;
			LEVEL 1 FOR 20.111;
			LEVEL 0 FOR 80.403;
			LEVEL 1 FOR 19.401;
			LEVEL 0 FOR 80.085;
			LEVEL 1 FOR 20.426;
			LEVEL 0 FOR 82.514;
			LEVEL 1 FOR 16.975;
			LEVEL 0 FOR 80.085;
			LEVEL 1 FOR 20.111;
			LEVEL 0 FOR 80.403;
			LEVEL 1 FOR 19.401;
			LEVEL 0 FOR 80.085;
			LEVEL 1 FOR 20.426;
			LEVEL 0 FOR 82.029;
			LEVEL 1 FOR 17.46;
			LEVEL 0 FOR 80.085;
			LEVEL 1 FOR 10.569;
		}
	}
}

TRANSITION_LIST("Y2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 10.586;
			LEVEL 0 FOR 37.753;
			LEVEL 1 FOR 40.555;
			LEVEL 0 FOR 59.258;
			LEVEL 1 FOR 40.1;
			LEVEL 0 FOR 60.415;
			LEVEL 1 FOR 39.784;
			LEVEL 0 FOR 59.701;
			LEVEL 1 FOR 40.1;
			LEVEL 0 FOR 60.087;
			LEVEL 1 FOR 40.555;
			LEVEL 0 FOR 59.258;
			LEVEL 1 FOR 40.1;
			LEVEL 0 FOR 60.689;
			LEVEL 1 FOR 39.51;
			LEVEL 0 FOR 59.701;
			LEVEL 1 FOR 40.1;
			LEVEL 0 FOR 60.087;
			LEVEL 1 FOR 40.555;
			LEVEL 0 FOR 59.258;
			LEVEL 1 FOR 40.1;
			LEVEL 0 FOR 11.748;
		}
	}
}

TRANSITION_LIST("Y1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.794;
			LEVEL 0 FOR 17.793;
			LEVEL 1 FOR 20.402;
			LEVEL 0 FOR 19.598;
			LEVEL 1 FOR 20.402;
			LEVEL 0 FOR 40.113;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 23.113;
			LEVEL 1 FOR 16.887;
			LEVEL 0 FOR 40.113;
			LEVEL 1 FOR 22.483;
			LEVEL 0 FOR 17.517;
			LEVEL 1 FOR 19.947;
			LEVEL 0 FOR 40.568;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 20.628;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 40.113;
			LEVEL 1 FOR 20.402;
			LEVEL 0 FOR 19.598;
			LEVEL 1 FOR 20.402;
			LEVEL 0 FOR 40.113;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 22.825;
			LEVEL 1 FOR 17.175;
			LEVEL 0 FOR 40.113;
			LEVEL 1 FOR 20.402;
			LEVEL 0 FOR 19.598;
			LEVEL 1 FOR 19.947;
			LEVEL 0 FOR 42.625;
			LEVEL 1 FOR 17.315;
			LEVEL 0 FOR 20.628;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 40.113;
			LEVEL 1 FOR 20.402;
			LEVEL 0 FOR 19.598;
			LEVEL 1 FOR 20.402;
			LEVEL 0 FOR 40.113;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 22.658;
			LEVEL 1 FOR 17.342;
			LEVEL 0 FOR 12.526;
		}
	}
}

TRANSITION_LIST("Y0")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.755;
			LEVEL 0 FOR 10.386;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 10.295;
			LEVEL 0 FOR 9.705;
			LEVEL 1 FOR 3.859;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "input";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "B7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "output";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "Y9";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Y8";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Y7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Y6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Y5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Y4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Y3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Y2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Y1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Y0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 9;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
